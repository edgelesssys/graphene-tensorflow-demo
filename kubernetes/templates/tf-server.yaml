kind: ServiceAccount
apiVersion: v1
metadata:
  name: tf-server
  namespace: tensorflow
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tf-server
  namespace: tensorflow
  labels:
    app: tf-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tf-server
      version: v1
  template:
    metadata:
      labels:
        app: tf-server
        version: v1
        marblerun/marbletype: tf-server
    spec:
      serviceAccountName: tf-server
      containers:
      - image: {{ .Values.image }}:{{ .Values.imageTag }}
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        name: tf-server
        resources:
          requests:
            memory: "4Gi"
            cpu: 2
        env:
        - name: PCCS_URL
          value: {{ .Values.pccsURL }}
        - name: PCCS_USE_SECURE_CERT
          value: {{ .Values.secureCert }}
        - name: SGX_AESM_ADDR
          value: "1"
        - name: EDG_MARBLE_UUID_FILE
          value: "uuid"
        - name: EDG_MARBLE_DNS_NAMES
          value: "grpc.tensorflow-serving.com"
        volumeMounts:
        - name: aesmd-socket
          mountPath: /var/run/aesmd
        - name: model-dir
          mountPath: /tensorflow-marblerun/models/resnet50-v15-fp32/1/
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8  }}
      {{- end }}
      volumes:
      - name: aesmd-socket
        hostPath:
          path: /var/run/aesmd
      - name: model-dir
        persistentVolumeClaim:
          claimName: encrypted-model
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: encrypted-model
  namespace: tensorflow
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 150Mi
---
apiVersion: v1
kind: Service
metadata:
  name: tf-server
  namespace: tensorflow
spec:
  type: LoadBalancer
  selector:
    app: tf-server
  ports:
  - name: grpc
    port: 8500
    targetPort: 8500
